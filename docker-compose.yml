version: '3.1'

services:
  redis:
    container_name: redis
    hostname: redis
    restart: always
    image: redis:6.0-alpine3.14
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes", "--save", '"900 1 300 10"']
    networks:
      backend:

  beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    image: celery-beat
    command: [poetry, run, celery, -A, ltd_invoice.celeryapp, beat]
    restart: always
    depends_on:
      - redis
    volumes:
      - type: bind
        source: .
        target: /app
      - type: bind
        source: .empty
        target: /app/.venv
    networks:
      backend:

  worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    image: celery-worker
    restart: always
    command: [poetry, run, celery, -A, ltd_invoice.celeryapp, worker, --loglevel=INFO, -E, --concurrency=1]
    depends_on:
      - redis
    volumes:
      - type: bind
        source: .
        target: /app
      - type: bind
        source: .empty
        target: /app/.venv
    networks:
      backend:

  flower:
    image: mher/flower:0.9.7
    command: [celery, flower, "--broker=${CELERY_BROKER}"]
    restart: always
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      backend:

  selenium_hub:
    image: selenium/hub:3.141.59
    hostname: selenium_hub
    restart: always
    ports:
      - "4444:4444"
    environment:
      GRID_MAX_SESSION: 16
      GRID_BROWSER_TIMEOUT: 3000
      GRID_TIMEOUT: 3000
    networks:
      backend:

  firefox:
    image: selenium/node-firefox-debug:3.141.59
    container_name: web-firefox
    restart: always
    depends_on:
      - selenium_hub
    environment:
      HUB_PORT_4444_TCP_ADDR: selenium_hub
      HUB_PORT_4444_TCP_PORT: 4444
      NODE_MAX_SESSION: 2
      NODE_MAX_INSTANCES: 2
    ports:
      - "5901:5900"
    networks:
      backend:


networks:
  backend:

volumes:
  redis-data:
